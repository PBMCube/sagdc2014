(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
Item = function (game, x, y, item) {
    this.name = item;
    Phaser.Sprite.call(this, game, x, y, item);
    game.add.existing(this);
}

Item.prototype = Object.create(Phaser.Sprite.prototype);
Item.prototype.constructor = Item;

Item.prototype.update = function() {
};

Item.prototype.onUse = function() {
    playerState.currentlyEquipped = this;
    Dialog('This isn\'t the time for that!');
};

Item.prototype.onClick = function() {
    if (Utils.containsObject(this, playerState.inventory)) playerState.inventory.add(this);
    else playerState.currentlyEquipped = this;
};

module.exports = Item;

},{}],2:[function(require,module,exports){
var Item = require('../item');

SpecificItem = function (game, x, y) {
    Item.call(this, game, x, y, 'specificitem');
};

SpecificItem.prototype = Object.create(Item.prototype);
SpecificItem.prototype.constructor = SpecificItem;

SpecificItem.prototype.onUse = function (arg1, arg2) {
  // ...
};

module.exports = SpecificItem
},{"../item":1}],3:[function(require,module,exports){
Player = function (game, x, y) {
    Phaser.Sprite.call(this, game, x, y, 'testsprite');
    game.add.existing(this);
}

Player.prototype = Object.create(Phaser.Sprite.prototype);
Player.prototype.constructor = Player;

/**
 * Automatically called by World.update
 */
Player.prototype.update = function() {
};

module.exports = Player;

},{}],4:[function(require,module,exports){
var game = new Phaser.Game(800, 600, Phaser.AUTO, 'sagdc-game');

var Utils = require('./utils');

var Player = require('./entities/player');
var SpecificItem = require('./entities/items/specificitem');

var playerState = {
	inventory: [], 		// List of Item
	currentlyEquipped: null // Item
};

game.state.add('Boot', require('./states/boot'));
game.state.add('Splash', require('./states/splash'));
game.state.add('Preloader', require('./states/preloader'));
game.state.add('Menu', require('./states/menu'));
game.state.add('Game', require('./states/game'));

game.state.start('Boot');

},{"./entities/items/specificitem":2,"./entities/player":3,"./states/boot":5,"./states/game":6,"./states/menu":7,"./states/preloader":8,"./states/splash":9,"./utils":10}],5:[function(require,module,exports){
var Boot = function () {};

module.exports = Boot;

Boot.prototype = {

  preload: function () {
    this.load.image('preloader', 'assets/preloader.gif');
  },

  create: function () {
    this.game.input.maxPointers = 1;
    // this.game.stage.disableVisibilityChange = true;

    if (this.game.device.desktop) {
      this.game.stage.scale.pageAlignHorizontally = true;
    } else {
      this.game.stage.scaleMode = Phaser.StageScaleMode.SHOW_ALL;
      this.game.stage.scale.minWidth =  480;
      this.game.stage.scale.minHeight = 260;
      this.game.stage.scale.maxWidth = 640;
      this.game.stage.scale.maxHeight = 480;
      this.game.stage.scale.forceLandscape = true;
      this.game.stage.scale.pageAlignHorizontally = true;
      this.game.stage.scale.setScreenSize(true);
    }
    this.game.state.start('Preloader');
  }
};

},{}],6:[function(require,module,exports){
var Game = function () {
  this.testentity = null;
};

module.exports = Game;

Game.prototype = {

  create: function () {
    var x = (this.game.width / 2) - 100;
    var y = (this.game.height / 2) - 50;

    this.testentity = new Player(this.game, x, y);
    this.testentity.anchor.setTo(0.5, 0.5);

    this.input.onDown.add(this.onInputDown, this);
  },

  update: function () {
    var x, y, cx, cy, dx, dy, angle, scale;

    x = this.input.position.x;
    y = this.input.position.y;
    cx = this.world.centerX;
    cy = this.world.centerY;

    angle = Math.atan2(y - cy, x - cx) * (180 / Math.PI);
    this.testentity.angle = angle;

    dx = x - cx;
    dy = y - cy;
    scale = Math.sqrt(dx * dx + dy * dy) / 100;

    this.testentity.scale.x = scale * 0.6;
    this.testentity.scale.y = scale * 0.6;
  },

  onInputDown: function () {
    this.game.state.start('Menu');
  }

};

},{}],7:[function(require,module,exports){
var Menu = function () {
  this.text = null;
};

module.exports = Menu;

Menu.prototype = {

  create: function () {
    var x = this.game.width / 2;
    var y = this.game.height / 2;

    var style = { font: "65px Arial", fill: "#ffffff", align: "center" };

    this.text = this.add.text(x - 300, y - 200, "Press to Start", style);

    this.input.onDown.add(this.onDown, this);
  },

  update: function () {
  },

  onDown: function () {
    this.game.state.start('Game');
  }
};

},{}],8:[function(require,module,exports){
var Preloader = function (game) {
  this.asset = null;
  this.ready = false;
};

module.exports = Preloader;

Preloader.prototype = {

  preload: function () {
    this.asset = this.add.sprite(320, 240, 'preloader');
    this.asset.anchor.setTo(0.5, 0.5);

    this.load.onLoadComplete.addOnce(this.onLoadComplete, this);
    this.load.setPreloadSprite(this.asset);
    this.load.image('testsprite', 'assets/test.png');
  },

  create: function () {
    this.asset.cropEnabled = false;
  },

  update: function () {
    if (!!this.ready) {
      this.game.state.start('Menu');
    }
  },

  onLoadComplete: function () {
    this.ready = true;
  }
};

},{}],9:[function(require,module,exports){
var Splash = function (game) {
};

module.exports = Splash;

Splash.prototype = {
  create: function () {
  }
};
},{}],10:[function(require,module,exports){
Utils = {
    containsObject: function(obj, list) {
        var i;
        for (i = 0; i < list.length; i++) {
            if (list[i] === obj) {
                return true;
            }
        }

        return false;
    }
};

module.exports = Utils;
},{}]},{},[4])
//# sourceMappingURL=data:application/json;base64,
